#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        opt_mt: opt_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "Optimized Mod-Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        opt_mt_2: opt_mt_2 {
            compatible = "zmk,behavior-hold-tap";
            label = "More Sensitive Optimized Mod-Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        switch_to_wezterm: switch_to_wezterm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp T>,
                <&macro_release>,
                <&kp SPACE>;

            label = "SWITCH_TO_WEZTERM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB     &kp Q                   &kp W                 &kp E               &kp R               &kp T                           &kp HOME              &kp Y     &kp U      &kp I               &kp O                  &kp P                       &kp BSPC
&lt 3 CAPS  &opt_mt LEFT_CONTROL A  &opt_mt LEFT_SHIFT S  &opt_mt LEFT_GUI D  &opt_mt LEFT_ALT F  &kp G                 &kp LEFT  &kp ENTER  &kp RIGHT  &kp H     &kp J      &kp K               &opt_mt RIGHT_SHIFT L  &opt_mt RIGHT_CONTROL SEMI  &kp SQT
&kp LSHIFT  &kp Z                   &opt_mt LEFT_GUI X    &kp C               &kp V               &kp B    &kp SPACE              &kp END               &kp N     &kp M      &mt LEFT_ALT COMMA  &mt LEFT_COMMAND DOT   &kp FSLH                    &kp RSHIFT
                                                          &mo 2               &kp SPACE           &kp ESC                                               &kp BSPC  &kp ENTER  &mo 1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &mmv MOVE_UP              &kp N6    &kp N7    &kp N8  &kp N9      &kp N0    &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans                &bt BT_PRV  &mkp LCLK     &bt BT_NXT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &kp HOME  &kp PG_UP
&trans  &trans  &trans  &trans  &trans  &trans  &kp C_MUTE                &bt BT_CLR                &trans    &trans    &trans  &kp PERIOD  &kp END   &kp PG_DN
                        &trans  &trans  &trans                                                      &kp INS   &kp DEL   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                   &to 0             &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bl BL_TOG    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &to 1  &mkp LCLK  &to 3  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans           &tog 2            &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                     &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp F10          &kp F11
&trans          &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PRINTSCREEN  &kp F12
&trans          &trans  &trans     &trans     &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                   &trans     &trans     &trans                                                                   &kp BACKSPACE  &kp NUMBER_0  &kp PERIOD
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
